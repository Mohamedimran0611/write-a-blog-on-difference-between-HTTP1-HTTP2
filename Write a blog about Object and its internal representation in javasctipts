Objects are important data types in javascript. 
Objects are different than primitive datatypes (i.e. number, string, boolean, etc.). 
Primitive data types contain one value but Objects can hold many values in form of Key: value pair. 
These keys can be variables or functions and are called properties and methods,
respectively, in the context of an object .
Objects, in JavaScript, is it’s most important data-type and forms the building blocks for modern JavaScript. 
These objects are quite different from JavaScript’s 
primitive data-types Number, String, Boolean, null, undefined and symbol
Objects are more complex and each object may contain any combination of these primitive data-types 
As well as reference data-types.
An object, is a reference data type
Variables that are assigned a reference value are given a reference or a pointer to that value
That reference or pointer points to the location in memory where the object is stored
The variables don’t actually store the value.
Loosely speaking, objects in JavaScript may be defined as an unordered collection of related data
primitive or reference types in the form of “key: value” pairs.
These keys can be variables or functions and are called properties and methods, respectively,
in the context of an object.

Internal Representation of Objects

Internally, JavaScript engines use various data structures to represent objects efficiently.
One common approach is using a hash table or a similar structure to store the object’s
properties and their corresponding values.
This allows for fast access and manipulation of properties